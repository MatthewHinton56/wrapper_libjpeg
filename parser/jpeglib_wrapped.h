#include "jpeglib.h"
#include "allocator.h"
struct jpeg_error_mgr * jpeg_std_error_wrapped(uint64_t id, struct jpeg_error_mgr * err_client, struct jpeg_error_mgr * err_library);
void jpeg_CreateCompress_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, int version, size_t structsize);
void jpeg_CreateDecompress_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library, int version, size_t structsize);
void jpeg_destroy_compress_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library);
void jpeg_destroy_decompress_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library);
void jpeg_stdio_dest_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, FILE * outfile_client, FILE * outfile_library);
void jpeg_stdio_src_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library, FILE * infile_client, FILE * infile_library);
void jpeg_mem_dest_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, unsigned char * * outbuffer_client, unsigned char * * outbuffer_library, unsigned long * outsize_client, unsigned long * outsize_library);
void jpeg_mem_src_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library, const unsigned char * inbuffer_client, const unsigned char * inbuffer_library, unsigned long insize);
void jpeg_set_defaults_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library);
void jpeg_set_colorspace_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, J_COLOR_SPACE colorspace);
void jpeg_default_colorspace_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library);
void jpeg_set_quality_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, int quality, boolean force_baseline);
void jpeg_set_linear_quality_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, int scale_factor, boolean force_baseline);
void jpeg_add_quant_table_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, int which_tbl, const unsigned int * basic_table_client, const unsigned int * basic_table_library, int scale_factor, boolean force_baseline);
int jpeg_quality_scaling_wrapped(uint64_t id, int quality);
void jpeg_simple_progression_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library);
void jpeg_suppress_tables_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, boolean suppress);
JQUANT_TBL * jpeg_alloc_quant_table_wrapped(uint64_t id, j_common_ptr cinfo_client, j_common_ptr cinfo_library);
JHUFF_TBL * jpeg_alloc_huff_table_wrapped(uint64_t id, j_common_ptr cinfo_client, j_common_ptr cinfo_library);
void jpeg_start_compress_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, boolean write_all_tables);
JDIMENSION jpeg_write_scanlines_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, JSAMPARRAY scanlines_client, JSAMPARRAY scanlines_library, JDIMENSION num_lines);
void jpeg_finish_compress_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library);
JDIMENSION jpeg_write_raw_data_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, JSAMPIMAGE data_client, JSAMPIMAGE data_library, JDIMENSION num_lines);
void jpeg_write_marker_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, int marker, const JOCTET * dataptr_client, const JOCTET * dataptr_library, unsigned int datalen);
void jpeg_write_m_header_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, int marker, unsigned int datalen);
void jpeg_write_m_byte_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, int val);
void jpeg_write_tables_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library);
void jpeg_write_icc_profile_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, const JOCTET * icc_data_ptr_client, const JOCTET * icc_data_ptr_library, unsigned int icc_data_len);
int jpeg_read_header_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library, boolean require_image);
boolean jpeg_start_decompress_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library);
JDIMENSION jpeg_read_scanlines_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library, JSAMPARRAY scanlines_client, JSAMPARRAY scanlines_library, JDIMENSION max_lines);
JDIMENSION jpeg_skip_scanlines_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library, JDIMENSION num_lines);
void jpeg_crop_scanline_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library, JDIMENSION * xoffset_client, JDIMENSION * xoffset_library, JDIMENSION * width_client, JDIMENSION * width_library);
boolean jpeg_finish_decompress_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library);
JDIMENSION jpeg_read_raw_data_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library, JSAMPIMAGE data_client, JSAMPIMAGE data_library, JDIMENSION max_lines);
boolean jpeg_has_multiple_scans_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library);
boolean jpeg_start_output_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library, int scan_number);
boolean jpeg_finish_output_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library);
boolean jpeg_input_complete_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library);
void jpeg_new_colormap_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library);
int jpeg_consume_input_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library);
void jpeg_calc_output_dimensions_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library);
void jpeg_save_markers_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library, int marker_code, unsigned int length_limit);
void jpeg_set_marker_processor_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library, int marker_code, jpeg_marker_parser_method routine);
jvirt_barray_ptr * jpeg_read_coefficients_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library);
void jpeg_write_coefficients_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library, jvirt_barray_ptr * coef_arrays_client, jvirt_barray_ptr * coef_arrays_library);
void jpeg_copy_critical_parameters_wrapped(uint64_t id, j_decompress_ptr srcinfo_client, j_decompress_ptr srcinfo_library, j_compress_ptr dstinfo_client, j_compress_ptr dstinfo_library);
void jpeg_abort_compress_wrapped(uint64_t id, j_compress_ptr cinfo_client, j_compress_ptr cinfo_library);
void jpeg_abort_decompress_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library);
void jpeg_abort_wrapped(uint64_t id, j_common_ptr cinfo_client, j_common_ptr cinfo_library);
void jpeg_destroy_wrapped(uint64_t id, j_common_ptr cinfo_client, j_common_ptr cinfo_library);
boolean jpeg_resync_to_restart_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library, int desired);
boolean jpeg_read_icc_profile_wrapped(uint64_t id, j_decompress_ptr cinfo_client, j_decompress_ptr cinfo_library, JOCTET * * icc_data_ptr_client, JOCTET * * icc_data_ptr_library, unsigned int * icc_data_len_client, unsigned int * icc_data_len_library);
